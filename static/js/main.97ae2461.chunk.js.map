{"version":3,"sources":["Components/Header.js","Components/Post.js","Components/Main.js","pages/Subreddit.js","Components/Sidebar.js","Components/SinglePost.js","Components/DisplayPost.js","pages/User.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","typography","popover","right","Header","classes","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","setPopover","searchTerm","setSearchTerm","searchResults","setSearchResults","setIsLoading","useEffect","fetch","then","result","status","console","error","responseText","json","data","children","isMenuOpen","Boolean","isMobileMenuOpen","open","id","undefined","handleMobileMenuClose","handlePopoverClick","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","IconButton","aria-label","className","mobileMenuId","renderMobileMenu","getFullTitle","url","pos","split","indexOf","AppBar","Toolbar","src","Typography","variant","noWrap","to","style","aria-describedby","onClick","Popover","getContentAnchorEl","InputBase","placeholder","value","onChange","e","target","onFocus","root","input","inputProps","map","post","Card","CardContent","gutterBottom","subreddit","author","component","CardActions","permalink","Button","ThumbUp","score","href","aria-controls","aria-haspopup","event","currentTarget","Post","props","minWidth","fontSize","marginBottom","media","thumbnail_width","fullTitle","thumbnail","CardMedia","image","window","Main","articles","setArticles","getSubreddit","i","Subreddit","match","params","isLoading","setData","textAlign","maxWidth","background","paper","border","Sidebar","List","ListItem","button","ListItemText","primary","path","require","SinglePost","filename","bodyText","preview","basename","images","source","selftext_html","replaceAll","ReactHtmlParser","alt","document","entities","DisplayPost","user","comments","setComments","comment","date","Date","created","toUTCString","body_html","decodeHTML","User","kind","thumbnail_height","createMuiTheme","main","red","secondary","App","process","ThemeProvider","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.97ae2461.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GitHub from '@material-ui/icons/GitHub';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Button, Popover } from '@material-ui/core';\nimport { Search, ThumbUp } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    typography: {\n        padding: theme.spacing(2),\n    },\n    popover: {\n        height: '60vh',\n        width: '100vh',\n        right: '3rem'\n    }\n}));\n\n\nexport const Header = () => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n    const [popover, setPopover] = useState(null)\n\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        fetch(`https://www.reddit.com/search.json?q=${searchTerm}`).then(result => {\n            if (result.status !== 200) {\n                console.error('ERROR: ' + result.responseText);\n            } else {\n                if (searchTerm === 'Search for something') {\n                    setSearchResults('Search for something');\n                } else {\n                    result.json().then(data => {\n                        if (data !== null) {\n                            setIsLoading(false);\n                            setSearchResults(data.data.children);\n                        }\n                    });\n                }\n            }\n        })\n    }, [searchTerm]);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    const open = Boolean(popover);\n    const id = open ? 'simple-popover' : undefined;\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const search = e => {\n        setSearchTerm(e.target.value);\n    }\n\n    const handlePopoverClick = () => {\n        setPopover(true);\n    };\n\n    const handlePopoverClose = () => {\n        setPopover(null);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"Github\" color=\"inherit\">\n                    <GitHub />\n                </IconButton>\n                <span className=\"github\">Github</span>\n            </MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"Github\" color=\"inherit\">\n                    <GitHub />\n                </IconButton>\n                <span className=\"github\">Github</span>\n            </MenuItem>\n        </Menu>\n    );\n\n    const getFullTitle = url => {\n        const pos = url.split(\"/\").indexOf('r');\n        return url.split(\"/\")[pos + 4];\n    }\n\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <img src=\"/RedFeed/favicon.ico\" width=\"50\" />&nbsp;&nbsp;&nbsp;\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        <Link to=\"/\" style={{ color: 'white' }}>RedFeed</Link>\n                    </Typography>\n                    <IconButton aria-label=\"Search\" color=\"inherit\" aria-describedby={id} onClick={handlePopoverClick}>\n                        <Search />\n                    </IconButton>\n                    <Popover\n                        id={id}\n                        open={open}\n                        anchorEl={popover}\n                        onClose={handlePopoverClose}\n                        className={classes.popover}\n                        getContentAnchorEl={null}\n                    >\n                        <div className={classes.search}>\n                            <div className={classes.searchIcon}>\n                                <SearchIcon />\n                            </div>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                value={searchTerm}\n                                onChange={search}\n                                aria-describedby={id}\n                                onFocus={handlePopoverClick}\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                inputProps={{ 'aria-label': 'search', 'name': 'q', 'autocomplete': 'off' }}\n                            />\n                        </div>\n                        {\n                            searchResults.map(post => (\n                                <Card variant=\"outlined\">\n                                    <CardContent>\n                                        <Typography color=\"textSecondary\" gutterBottom>\n                                            {post.data.subreddit} • by {post.data.author}\n                                        </Typography>\n                                        <Typography variant=\"h6\" component=\"h2\">\n                                            {post.data.title}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Link to={'/post/' + post.data.subreddit + '/' + post.data.id + '/' + getFullTitle('http:redit.com' + post.data.permalink)}>\n                                            <Button color=\"primary\">Details</Button>\n                                        </Link>\n                                        <Button color=\"primary\">\n                                            <ThumbUp />&nbsp;&nbsp;\n                                                 {post.data.score}\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            ))\n                        }\n                    </Popover>\n\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <a href=\"https://github.com/xsky13/RedFeed/\" target=\"_blank\" className=\"github-link\">\n                            <IconButton aria-label=\"Github\" color=\"inherit\">\n                                <GitHub />\n                            </IconButton>\n                        </a>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { ThumbUp } from '@material-ui/icons';\n\n\nexport const Post = (props) => {\n    const useStyles = makeStyles({\n        root: {\n            minWidth: 275,\n        },\n        title: {\n            fontSize: 14,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        media: {\n            width: props.post.thumbnail_width\n        }\n    });\n\n    const classes = useStyles();\n\n    const changePage = () => {\n        window.open(`https://reddit.com${props.post.permalink}`)\n    }\n\n    const url = 'http://redit.com' + props.post.permalink;\n\n    const pos = url.split(\"/\").indexOf('r');\n    const fullTitle = url.split(\"/\")[pos + 4];\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <div className=\"row\">\n                {props.post.thumbnail == \"default\" || props.post.thumbnail == \"self\" || props.post.thumbnail == \"image\" || props.post.thumbnail == \"\" ? \"\" :\n                    <CardMedia\n                        className={classes.media}\n                        image={props.post.thumbnail}\n                        component=\"img\"\n                    />\n                }\n                <div className=\"main-card\">\n                    <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            {props.post.subreddit} • by <Link to={\"/user/\" + props.post.author}>{props.post.author}</Link>\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {props.post.title}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Link to={'/post/' + props.post.subreddit + '/' + props.post.id + '/' + fullTitle}><Button color=\"primary\">Details</Button></Link>\n                        <Button color=\"primary\" onClick={changePage}>View on Reddit</Button>\n                        <Button color=\"primary\">\n                            <ThumbUp />&nbsp;&nbsp;\n                            {props.post.score}\n                        </Button>\n                    </CardActions>\n                </div>\n            </div>\n        </Card>\n    )\n}\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Post } from './Post';\n\n\nexport const Main = () => {\n    const [articles, setArticles] = useState([]);\n    const [subreddit, setSubreddit] = useState('hot');\n\n    const getSubreddit = subreddit => {\n        fetch(subreddit).then(result => {\n            if (result.status !== 200) {\n                console.error('ERROR: ' + result.responseText);\n            } else {\n                result.json().then(data => {\n                    if (data !== null) {\n                        setArticles(data.data.children);\n                    }\n                });\n            }\n        });\n    }\n\n    useEffect(() => getSubreddit(`https://www.reddit.com/${subreddit}.json`), [subreddit]);\n\n\n    return (\n        <>\n        \n            <div className=\"posts\">\n                <Typography variant=\"h2\" style={{ marginBottom: '1rem' }}>All Posts {subreddit == 'hot' ? '' : subreddit}</Typography>\n                <div className=\"all-posts\">\n                    {\n                        (articles !== null) ? articles.map((post, i) => {\n                            return (\n                                <>\n                                    <Post key={i} post={post.data} />\n                                    <br />\n                                </>\n                            );\n                        }) : ''\n                    }\n                </div>\n            </div>\n        </>\n    )\n};\n\n","import React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Post } from '../Components/Post';\n\n\nexport const Subreddit = ({ match }) => {\n  const {\n    params: { subreddit },\n  } = match;\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState();\n  const [articles, setArticles] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://www.reddit.com/r/${subreddit}.json`).then(result => {\n      if (result.status !== 200) {\n        console.error('ERROR: ' + result.responseText);\n      } else {\n        result.json().then(data => {\n          if (data !== null) {\n            setData(data);\n            setIsLoading(false);\n            setArticles(data.data.children);\n          }\n        });\n      }\n    })\n  }, [subreddit]);\n\n  if (isLoading) {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <img src=\"/RedFeed/loading.svg\" />\n      </div>\n    );\n  } else {\n    const oldArticle = articles;\n\n    if (oldArticle !== articles) {\n      setIsLoading(true);\n    }\n    return (\n      <>\n        <div className=\"posts\">\n          <Typography variant=\"h2\">r/{subreddit}</Typography>\n          <br />\n          {\n\n            (articles !== null) ? articles.map((post, i) => {\n              return (\n                <>\n                  <Post post={post.data} />\n                  <br />\n                </>\n              );\n            }) : ''\n          }\n        </div>\n      </>\n    );\n  }\n\n};","import { List } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { ListItem } from '@material-ui/core';\nimport { ListItemText } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '30vh',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid rgba(0, 0, 0, 0.1)',\n        borderRadius: '4px'\n    },\n}));\n\nexport const Sidebar = () => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"sidebar\">\n            <Typography variant=\"h4\">Subreddits</Typography>\n            <div className={classes.root}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    <Link to='/subreddit/announcements'>\n                        <ListItem key=\"100\" button>\n                            <ListItemText primary=\"Announcements\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/funny'>\n                        <ListItem key=\"200\" button>\n                            <ListItemText primary=\"Funny\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/AskReddit'>\n                        <ListItem key=\"300\" button>\n                            <ListItemText primary=\"AskReddit\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/gaming'>\n                        <ListItem key=\"400\" button>\n                            <ListItemText primary=\"gaming\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/memes'>\n                        <ListItem key=\"500\" button>\n                            <ListItemText primary=\"memes\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/Jokes'>\n                        <ListItem key=\"600\" button>\n                            <ListItemText primary=\"Jokes\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/sports'>\n                        <ListItem key=\"700\" button>\n                            <ListItemText primary=\"Sports\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/DIY'>\n                        <ListItem key=\"800\" button>\n                            <ListItemText primary=\"DIY\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/Art'>\n                        <ListItem key=\"900\" button>\n                            <ListItemText primary=\"Art\" />\n                        </ListItem>\n                    </Link>\n                </List>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nconst path = require('path');\n\n\nexport const SinglePost = (props) => {\n    let filename = '';\n    let bodyText = '';\n\n    if (props.post.preview) {\n        filename = path.basename(props.post.preview.images[0].source.url);\n    }\n\n    if (props.post.selftext_html) {\n        bodyText = props.post.selftext_html.replaceAll('&lt;', \"<\");\n        bodyText = bodyText.replaceAll('&gt;', '>');\n        bodyText = bodyText.replaceAll('\"', '');\n    }\n\n    return (\n        <>\n            <div className=\"post\">\n                <br />\n                <Typography variant=\"h5\" color=\"textSecondary\">{props.post.title} • by <Link to={\"/user/\" + props.post.author}>{props.post.author}</Link></Typography>\n                <br />\n                {ReactHtmlParser(bodyText)}\n                <br />\n                {props.post.preview ? <img src={'http://i.redd.it/' + filename} className=\"main-image\" alt=\"main\" /> : ''}\n            </div>\n            <script>\n                {document.title = props.post.title}\n            </script>\n        </>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Button, Typography } from '@material-ui/core';\nimport { SinglePost } from './SinglePost';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { ThumbUp } from '@material-ui/icons';\nconst entities = require(\"entities\");\n\n\nexport const DisplayPost = ({ match }) => {\n    const useStyles = makeStyles({\n        root: {\n            minWidth: 275,\n        },\n        title: {\n            fontSize: 14,\n        },\n        pos: {\n            marginBottom: 12,\n        }\n    });\n\n    const classes = useStyles();\n\n    const {\n        params: { subreddit, user, post },\n    } = match;\n    const [isLoading, setIsLoading] = useState(true);\n    const [articles, setArticles] = useState([]);\n    const [comments, setComments] = useState([]);\n\n\n    useEffect(() => {\n        fetch(`https://www.reddit.com/r/${subreddit}/comments/${user}/${post}.json`).then(result => {\n            if (result.status !== 200) {\n                console.error('ERROR: ' + result.responseText);\n            } else {\n                result.json().then(data => {\n                    if (data !== null) {\n                        setIsLoading(false);\n                        setArticles(data[0].data.children);\n                        setComments(data[1].data.children);\n                    }\n                });\n            }\n        })\n    }, [subreddit], [user], [post]);\n\n    if (isLoading) {\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <img src=\"/RedFeed/loading.svg\" alt=\"loading...\" />\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"posts\">\n                <Typography variant=\"h3\" className=\"title\">r/{post}</Typography>\n                {\n\n                    (articles !== null) ? articles.map((post, i) => {\n                        return (\n                            <>\n                                <SinglePost key={i} post={post.data} comments={post.data} />\n                                <br />\n                                {\n\n                                    (comments !== null) ? comments.map((comment, i) => {\n                                        const date = new Date(comment.data.created);\n                                        return (\n                                            <>\n                                                <Card key={i} className={classes.root} variant=\"outlined\">\n                                                    <CardContent>\n                                                        <Typography className={classes.title} color=\"textSecondary\">\n                                                            {comment.data.author} • {date.toUTCString()}\n                                                        </Typography>\n                                                        <Typography variant=\"body1\">\n                                                            {comment.data.body_html ? ReactHtmlParser(entities.decodeHTML(comment.data.body_html)) : ''}\n                                                        </Typography>\n                                                        <Button>\n                                                            <ThumbUp />&nbsp;&nbsp;\n                                                            {comment.data.score}\n                                                        </Button>\n                                                    </CardContent>\n                                                </Card>\n                                                <br />\n                                            </>\n                                        );\n                                    }) : ''\n                                }\n                            </>\n                        );\n                    }) : ''\n                }\n            </div>\n        );\n    }\n\n};","import React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\n\nexport const User = ({ match }) => {\n    const {\n        params: { user },\n    } = match;\n    const [isLoading, setIsLoading] = useState(true);\n    const [articles, setArticles] = useState([]);\n\n    useEffect(() => {\n        fetch(`https://www.reddit.com/user/${user}.json`).then(result => {\n            if (result.status !== 200) {\n                console.error('ERROR: ' + result.responseText);\n            } else {\n                result.json().then(data => {\n                    if (data !== null) {\n                        setIsLoading(false);\n                        setArticles(data.data.children);\n                    }\n                });\n            }\n        })\n    }, [user]);\n\n    if (isLoading) {\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <img src=\"/RedFeed/loading.svg\" />\n            </div>\n        );\n    } else {\n        return (\n            <>\n                <div className=\"posts\">\n                    <Typography variant=\"h2\">{user}</Typography>\n                    {\n\n                        (articles !== null) ? articles.map((post, i) => {\n                            const url = 'http://redit.com' + post.data.permalink;\n\n                            const pos = url.split(\"/\").indexOf('r');\n                            const fullTitle = url.split(\"/\")[pos + 4];\n\n                            const changePage = () => {\n                                window.open(`https://reddit.com${post.data.permalink}`)\n                            }\n\n                            return (\n                                <>\n                                    {post.kind == \"t3\" ?\n                                        <>\n                                            <Card variant=\"outlined\">\n                                                <div className=\"row\">\n                                                    {post.data.thumbnail == \"default\" ? \"\" : <CardMedia\n\n                                                        image={post.data.thumbnail}\n                                                        height={post.data.thumbnail_height}\n                                                        width={post.data.thumbnail_width}\n                                                        title=\"Paella dish\"\n                                                    />}\n                                                    <div className=\"main-card\">\n                                                        <CardContent>\n                                                            <Typography color=\"textSecondary\" gutterBottom>\n                                                                {post.data.subreddit} • by {post.data.author}\n                                                            </Typography>\n                                                            <Typography variant=\"h5\" component=\"h2\">\n                                                                {post.data.title}\n                                                            </Typography>\n                                                        </CardContent>\n                                                        <CardActions>\n                                                            <Link to={'/post/' + post.data.subreddit + '/' + post.data.id + '/' + fullTitle}><Button color=\"primary\">Details</Button></Link>\n                                                            <Button color=\"primary\" onClick={changePage}>View on Reddit</Button>\n                                                        </CardActions>\n                                                    </div>\n                                                </div>\n                                            </Card>\n                                            <br />\n                                        </> : '' }\n                                </>\n                            );\n                        }) : ''\n                    }\n                </div>\n            </>\n        );\n    }\n\n};","import './App.css';\nimport { Header } from './Components/Header';\nimport { Main } from './Components/Main';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Subreddit } from './pages/Subreddit';\nimport { Sidebar } from './Components/Sidebar';\nimport { DisplayPost } from './Components/DisplayPost';\nimport { User } from './pages/User';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: red[500],\n    },\n    secondary: {\n      main: red[500],\n    },\n  },\n});\n\n\n\nconst App = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Header />\n          <div className=\"main-row\">\n            <Sidebar />\n            <Switch>\n              <Route path=\"/\" exact component={Main} />\n            </Switch>\n            <Switch>\n              <Route path=\"/subreddit/:subreddit\" exact component={Subreddit} />\n            </Switch>\n            <Switch>\n              <Route path=\"/post/:subreddit/:user/:post\" exact component={DisplayPost} />\n            </Switch>\n            <Switch>\n              <Route path=\"/user/:user\" exact component={User} />\n            </Switch>\n          </div>\n        </div>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}