{"version":3,"sources":["Components/Header.js","Components/Post.js","Components/Main.js","pages/Subreddit.js","Components/Sidebar.js","Components/SinglePost.js","Components/DisplayPost.js","pages/User.js","Components/Search.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","Header","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","className","mobileMenuId","renderMobileMenu","AppBar","Toolbar","src","Typography","variant","noWrap","to","style","action","method","InputBase","placeholder","root","input","inputProps","aria-controls","aria-haspopup","onClick","event","currentTarget","Post","props","minWidth","fontSize","pos","marginBottom","media","post","thumbnail_width","url","permalink","split","indexOf","fullTitle","console","log","Card","thumbnail","CardMedia","image","component","CardContent","gutterBottom","subreddit","author","CardActions","Button","window","ThumbUp","score","Main","articles","setArticles","useEffect","fetch","then","result","status","error","responseText","json","data","children","getSubreddit","map","i","Subreddit","match","params","isLoading","setIsLoading","setData","textAlign","maxWidth","background","paper","border","Sidebar","List","ListItem","button","ListItemText","primary","path","require","SinglePost","filename","bodyText","preview","basename","images","source","selftext_html","replaceAll","ReactHtmlParser","alt","document","entities","DisplayPost","user","comments","setComments","comment","date","Date","created","toUTCString","body_html","decodeHTML","User","kind","thumbnail_height","Search","param","setParams","URL","location","href","searchParams","get","createMuiTheme","main","red","secondary","App","ThemeProvider","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bd158acf.chunk.js","sourcesContent":["import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GitHub from '@material-ui/icons/GitHub';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport const Header = () => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"Github\" color=\"inherit\">\n                    <GitHub />\n                </IconButton>\n                <span className=\"github\">Github</span>\n            </MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"Github\" color=\"inherit\">\n                    <GitHub />\n                </IconButton>\n                <span className=\"github\">Github</span>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <img src=\"/RedFeed/favicon.ico\" width=\"50\" />&nbsp;&nbsp;&nbsp;\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        <Link to=\"/\" style={{color: 'white'}}>RedFeed</Link>\n                    </Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.search}>\n                        <form action=\"/search\" method=\"get\">\n                            <div className={classes.searchIcon}>\n                                <SearchIcon />\n                            </div>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                inputProps={{ 'aria-label': 'search', 'name': 'q' }}\n                            />\n                        </form>\n                    </div>\n                    <div className={classes.sectionDesktop}>\n                        <IconButton aria-label=\"Github\" color=\"inherit\">\n                            <GitHub />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { ThumbUp } from '@material-ui/icons';\n\n\nexport const Post = (props) => {\n    const useStyles = makeStyles({\n        root: {\n            minWidth: 275,\n        },\n        title: {\n            fontSize: 14,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        media: {\n            width: props.post.thumbnail_width\n        }\n    });\n\n    const classes = useStyles();\n\n    const changePage = () => {\n        window.open(`https://reddit.com${props.post.permalink}`)\n    }\n\n    const url = 'http://redit.com' + props.post.permalink;\n\n    const pos = url.split(\"/\").indexOf('r');\n    const fullTitle = url.split(\"/\")[pos + 4];\n\n    console.log(props.post);\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <div className=\"row\">\n                {props.post.thumbnail == \"default\" || props.post.thumbnail == \"self\" || props.post.thumbnail == \"image\" || props.post.thumbnail == \"\" ? \"\" :\n                    <CardMedia\n                        className={classes.media}\n                        image={props.post.thumbnail}\n                        component=\"img\"\n                    />\n                }\n                <div className=\"main-card\">\n                    <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            {props.post.subreddit} • by {props.post.author}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {props.post.title}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Link to={'/post/' + props.post.subreddit + '/' + props.post.id + '/' + fullTitle}><Button color=\"primary\">Details</Button></Link>\n                        <Button color=\"primary\" onClick={changePage}>View on Reddit</Button>\n                        <Button color=\"primary\">\n                            <ThumbUp />&nbsp;&nbsp;\n                            {props.post.score}\n                        </Button>\n                    </CardActions>\n                </div>\n            </div>\n        </Card>\n    )\n}\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Post } from './Post';\n\n\nexport const Main = () => {\n    const [articles, setArticles] = useState([]);\n    const [subreddit, setSubreddit] = useState('hot');\n\n    const getSubreddit = subreddit => {\n        fetch(subreddit).then(result => {\n            if (result.status !== 200) {\n                console.error('ERROR: ' + result.responseText);\n            } else {\n                result.json().then(data => {\n                    if (data !== null) {\n                        console.log(data)\n                        setArticles(data.data.children);\n                    }\n                });\n            }\n        });\n    }\n\n    useEffect(() => getSubreddit(`https://www.reddit.com/${subreddit}.json`), [subreddit]);\n\n\n    return (\n        <>\n        \n            <div className=\"posts\">\n                <Typography variant=\"h2\" style={{ marginBottom: '1rem' }}>All Posts {subreddit == 'hot' ? '' : subreddit}</Typography>\n                <div className=\"all-posts\">\n                    {\n                        (articles !== null) ? articles.map((post, i) => {\n                            return (\n                                <>\n                                    <Post key={i} post={post.data} />\n                                    <br />\n                                </>\n                            );\n                        }) : ''\n                    }\n                </div>\n            </div>\n        </>\n    )\n};\n\n","import React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Post } from '../Components/Post';\n\n\nexport const Subreddit = ({ match }) => {\n  const {\n    params: { subreddit },\n  } = match;\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState();\n  const [articles, setArticles] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://www.reddit.com/r/${subreddit}.json`).then(result => {\n      if (result.status !== 200) {\n        console.error('ERROR: ' + result.responseText);\n      } else {\n        result.json().then(data => {\n          if (data !== null) {\n            setData(data);\n            setIsLoading(false);\n            setArticles(data.data.children);\n          }\n        });\n      }\n    })\n  }, [subreddit]);\n\n  if (isLoading) {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <img src=\"/loading.svg\" />\n      </div>\n    );\n  } else {\n    const oldArticle = articles;\n\n    if (oldArticle !== articles) {\n      setIsLoading(true);\n    }\n    return (\n      <>\n        <div className=\"posts\">\n          <Typography variant=\"h2\">r/{subreddit}</Typography>\n          <br />\n          {\n\n            (articles !== null) ? articles.map((post, i) => {\n              return (\n                <>\n                  <Post post={post.data} />\n                  <br />\n                </>\n              );\n            }) : ''\n          }\n        </div>\n      </>\n    );\n  }\n\n};","import { List } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { ListItem } from '@material-ui/core';\nimport { ListItemText } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '30vh',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid rgba(0, 0, 0, 0.1)',\n        borderRadius: '4px'\n    },\n}));\n\nexport const Sidebar = () => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"sidebar\">\n            <Typography variant=\"h4\">Subreddits</Typography>\n            <div className={classes.root}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    <Link to='/subreddit/announcements'>\n                        <ListItem key=\"100\" button>\n                            <ListItemText primary=\"Announcements\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/funny'>\n                        <ListItem key=\"200\" button>\n                            <ListItemText primary=\"Funny\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/AskReddit'>\n                        <ListItem key=\"300\" button>\n                            <ListItemText primary=\"AskReddit\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/gaming'>\n                        <ListItem key=\"400\" button>\n                            <ListItemText primary=\"gaming\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/memes'>\n                        <ListItem key=\"500\" button>\n                            <ListItemText primary=\"memes\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/Jokes'>\n                        <ListItem key=\"600\" button>\n                            <ListItemText primary=\"Jokes\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/sports'>\n                        <ListItem key=\"700\" button>\n                            <ListItemText primary=\"Sports\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/DIY'>\n                        <ListItem key=\"800\" button>\n                            <ListItemText primary=\"DIY\" />\n                        </ListItem>\n                    </Link>\n                    <Link to='/subreddit/Art'>\n                        <ListItem key=\"900\" button>\n                            <ListItemText primary=\"Art\" />\n                        </ListItem>\n                    </Link>\n                </List>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Typography } from '@material-ui/core';\nconst path = require('path');\n\n\nexport const SinglePost = (props) => {\n    let filename = '';\n    let bodyText = '';\n\n    if (props.post.preview) {\n        filename = path.basename(props.post.preview.images[0].source.url);\n    }\n\n    if (props.post.selftext_html) {\n        bodyText = props.post.selftext_html.replaceAll('&lt;', \"<\");\n        bodyText = bodyText.replaceAll('&gt;', '>');\n        bodyText = bodyText.replaceAll('\"', '');\n    }\n\n    console.log(props.post.selftext_html === null);\n    return (\n        <>\n            <div className=\"post\">\n                <br />\n                <Typography variant=\"h5\" color=\"textSecondary\">{props.post.title} • by {props.post.author}</Typography>\n                <br />\n                {ReactHtmlParser(bodyText)}\n                <br />\n                {props.post.preview ? <img src={'http://i.redd.it/' + filename} className=\"main-image\" alt=\"main\" /> : ''}\n            </div>\n            <script>\n                {document.title = props.post.title}\n            </script>\n        </>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Button, Typography } from '@material-ui/core';\nimport { SinglePost } from './SinglePost';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { ThumbUp } from '@material-ui/icons';\nconst entities = require(\"entities\");\n\n\nexport const DisplayPost = ({ match }) => {\n    const useStyles = makeStyles({\n        root: {\n            minWidth: 275,\n        },\n        title: {\n            fontSize: 14,\n        },\n        pos: {\n            marginBottom: 12,\n        }\n    });\n\n    const classes = useStyles();\n\n    const {\n        params: { subreddit, user, post },\n    } = match;\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState();\n    const [articles, setArticles] = useState([]);\n    const [comments, setComments] = useState([]);\n\n\n    useEffect(() => {\n        fetch(`https://www.reddit.com/r/${subreddit}/comments/${user}/${post}.json`).then(result => {\n            if (result.status !== 200) {\n                console.error('ERROR: ' + result.responseText);\n            } else {\n                result.json().then(data => {\n                    if (data !== null) {\n                        console.log(data);\n                        setData(data);\n                        setIsLoading(false);\n                        setArticles(data[0].data.children);\n                        setComments(data[1].data.children);\n                    }\n                });\n            }\n        })\n    }, [subreddit], [user], [post]);\n\n    if (isLoading) {\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <img src=\"http://localhost/codevemy/assets/images/loading.svg\" alt=\"loading...\" />\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"posts\">\n                <Typography variant=\"h3\" className=\"title\">r/{post}</Typography>\n                {\n\n                    (articles !== null) ? articles.map((post, i) => {\n                        return (\n                            <>\n                                <SinglePost key={i} post={post.data} comments={post.data} />\n                                <br />\n                                {\n\n                                    (comments !== null) ? comments.map((comment, i) => {\n                                        const date = new Date(comment.data.created);\n                                        return (\n                                            <>\n                                                <Card key={i} className={classes.root} variant=\"outlined\">\n                                                    <CardContent>\n                                                        <Typography className={classes.title} color=\"textSecondary\">\n                                                            {comment.data.author} • {date.toUTCString()}\n                                                        </Typography>\n                                                        <Typography variant=\"body1\">\n                                                            {comment.data.body_html ? ReactHtmlParser(entities.decodeHTML(comment.data.body_html)) : ''}\n                                                        </Typography>\n                                                        <Button>\n                                                            <ThumbUp />&nbsp;&nbsp;\n                                                            {comment.data.score}\n                                                        </Button>\n                                                    </CardContent>\n                                                </Card>\n                                                <br />\n                                            </>\n                                        );\n                                    }) : ''\n                                }\n                            </>\n                        );\n                    }) : ''\n                }\n            </div>\n        );\n    }\n\n};","import React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\n\nexport const User = ({ match }) => {\n    const {\n        params: { user },\n    } = match;\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState();\n    const [articles, setArticles] = useState([]);\n\n    useEffect(() => {\n        fetch(`https://www.reddit.com/user/${user}.json`).then(result => {\n            if (result.status !== 200) {\n                console.error('ERROR: ' + result.responseText);\n            } else {\n                result.json().then(data => {\n                    if (data !== null) {\n                        console.log(data);\n                        setData(data);\n                        setIsLoading(false);\n                        setArticles(data.data.children);\n                    }\n                });\n            }\n        })\n    }, [user]);\n\n    if (isLoading) {\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <img src=\"http://localhost/codevemy/assets/images/loading.svg\" />\n            </div>\n        );\n    } else {\n        return (\n            <>\n                <div className=\"posts\">\n                    <Typography variant=\"h2\">{user}</Typography>\n                    {\n\n                        (articles !== null) ? articles.map((post, i) => {\n                            const url = 'http://redit.com' + post.data.permalink;\n\n                            const pos = url.split(\"/\").indexOf('r');\n                            const fullTitle = url.split(\"/\")[pos + 4];\n\n                            const changePage = () => {\n                                window.open(`https://reddit.com${post.data.permalink}`)\n                            }\n\n                            return (\n                                <>\n                                    {post.kind == \"t3\" ?\n                                        <>\n                                            <Card variant=\"outlined\">\n                                                <div className=\"row\">\n                                                    {post.data.thumbnail == \"default\" ? \"\" : <CardMedia\n\n                                                        image={post.data.thumbnail}\n                                                        height={post.data.thumbnail_height}\n                                                        width={post.data.thumbnail_width}\n                                                        title=\"Paella dish\"\n                                                    />}\n                                                    <div className=\"main-card\">\n                                                        <CardContent>\n                                                            <Typography color=\"textSecondary\" gutterBottom>\n                                                                {post.data.subreddit} • by {post.data.author}\n                                                            </Typography>\n                                                            <Typography variant=\"h5\" component=\"h2\">\n                                                                {post.data.title}\n                                                            </Typography>\n                                                        </CardContent>\n                                                        <CardActions>\n                                                            <Link to={'/post/' + post.data.subreddit + '/' + post.data.id + '/' + fullTitle}><Button color=\"primary\">Details</Button></Link>\n                                                            <Button color=\"primary\" onClick={changePage}>View on Reddit</Button>\n                                                        </CardActions>\n                                                    </div>\n                                                </div>\n                                            </Card>\n                                            <br />\n                                        </> : '' }\n                                </>\n                            );\n                        }) : ''\n                    }\n                </div>\n            </>\n        );\n    }\n\n};","import React, { useState, useEffect } from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { ThumbUp } from '@material-ui/icons';\n\n\nexport const Search = ({ match }) => {\n    const {\n        params: { param },\n    } = match;\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState();\n    const [params, setParams] = useState([]);\n\n    useEffect(() => {\n        fetch(`https://www.reddit.com/search.json?q=${new URL(window.location.href).searchParams.get('q')}`).then(result => {\n            if (result.status !== 200) {\n                console.error('ERROR: ' + result.responseText);\n            } else {\n                result.json().then(data => {\n                    if (data !== null) {\n                        console.log(data);\n                        setData(data);\n                        setIsLoading(false);\n                        setParams(data.data.children);\n                    }\n                });\n            }\n        })\n    }, [param]);\n\n    const useStyles = makeStyles({\n        media: {\n            width: 140\n        }\n    });\n\n    const classes = useStyles();\n\n    if (isLoading) {\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <img src=\"http://localhost/codevemy/assets/images/loading.svg\" />\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"posts\">\n                {\n                    params.map((result, i) => {\n                        const url = 'http://redit.com' + result.data.permalink;\n\n                        const pos = url.split(\"/\").indexOf('r');\n                        const fullTitle = url.split(\"/\")[pos + 4];\n\n                        const changePage = () => {\n                            window.open(`https://reddit.com${result.data.permalink}`)\n                        }\n\n                        return (\n                            <>\n                                <Card variant=\"outlined\">\n                                    <div className=\"row\">\n                                        {result.data.thumbnail == \"default\" || result.data.thumbnail == \"self\" || result.data.thumbnail == \"image\" ? \"\" :\n                                            <CardMedia\n                                                className={classes.media}\n                                                image={result.data.thumbnail}\n                                                component=\"img\"\n                                            />\n                                        }\n                                        <div className=\"main-card\">\n                                            <CardContent>\n                                                <Typography color=\"textSecondary\" gutterBottom>\n                                                    {result.data.subreddit} • by {result.data.author}\n                                                </Typography>\n                                                <Typography variant=\"h5\" component=\"h2\">\n                                                    {result.data.title}\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                                <Link to={'/post/' + result.data.subreddit + '/' + result.data.id + '/' + fullTitle}><Button color=\"primary\">Details</Button></Link>\n                                                <Button color=\"primary\" onClick={changePage}>View on Reddit</Button>\n                                                <Button color=\"primary\">\n                                                    <ThumbUp />&nbsp;&nbsp;\n                                                    {result.data.score}\n                                                </Button>\n                                            </CardActions>\n                                        </div>\n                                    </div>\n                                </Card>\n                                <br />\n                            </>\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n}\n","import './App.css';\nimport { Header } from './Components/Header';\nimport { Main } from './Components/Main';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Subreddit } from './pages/Subreddit';\nimport { Sidebar } from './Components/Sidebar';\nimport { DisplayPost } from './Components/DisplayPost';\nimport { User } from './pages/User';\nimport { Search } from './Components/Search';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: red[500],\n    },\n    secondary: {\n      main: red[500],\n    },\n  },\n});\n\n\n\nconst App = () => {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Header />\n          <div className=\"main-row\">\n            <Sidebar />\n            <Switch>\n              <Route path=\"/\" exact component={Main} />\n            </Switch>\n            <Switch>\n              <Route path=\"/subreddit/:subreddit\" exact component={Subreddit} />\n            </Switch>\n            <Switch>\n              <Route path=\"/post/:subreddit/:user/:post\" exact component={DisplayPost} />\n            </Switch>\n            <Switch>\n              <Route path=\"/user/:user\" exact component={User} />\n            </Switch>\n            <Switch>\n              <Route path=\"/search\" exact component={Search} />\n            </Switch>\n          </div>\n        </div>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}